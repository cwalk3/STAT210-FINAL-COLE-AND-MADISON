---
title: "sta210 project"
author: "Cole Walker, Madison Griffin"
format: pdf
editor: visual
---

## loading packages & dataset
```{r message = F}
library(tidyverse)
library(tidymodels)
library(readxl)
library(MASS)
library(leaps)
library(caret)
library(glmnet)
library(Stat2Data)
#library(statnnet)
library(lme4)
library(UpSetR)
library(nlme)
library(sjstats)
set.seed(8)
soccer <- read_excel("AllTimeRankingByClub.xlsx")
```

#### Introduction and data

## Data Cleaning
```{r}
soccer = soccer %>%
  rename(goals_for = `Goals For`,
         goals_against = `Goals Against`,
         goal_diff = `Goal Diff`)

soccer = soccer %>%
  mutate(winspermatch = Win/Played,
         pointspermatch = Pts/Played,
         goalspermatch = goals_for/Played,
         goalsagainstpermatch = goals_against/Played,
         goalmarginpermatch = goal_diff/Played)

soccer = soccer %>%
  mutate(topfiveleague = ifelse(Country == 'ESP' | Country == 'ENG' | Country == 'GER' | Country == 'ITA' | Country == 'FRA', "top five", "not top five"))
```

## EDA

Plot 1: 
```{r}
soccer %>%
  filter(Titles > 0) %>%
  ggplot(aes(x = reorder(Club, (-Titles)), y = Titles)) +
  geom_bar(stat = 'identity') +
  labs(x = 'Club', y = 'Number of Titles', title = 'Number of Titles for each Club',
       subtitle = 'Excluding Clubs That Have Never Won a Title') +
  theme_bw() +
  scale_x_discrete(guide = guide_axis(angle = 45))
```

Plot 2:
```{r}
soccer %>%
  filter(Titles > 0) %>%
  ggplot(aes(x = reorder(Country, (-Titles)), y = Titles)) +
  geom_bar(stat = 'identity') +
  labs(x = 'Country', y = 'Number of Titles', title = 'Number of Titles per Country',
       subtitle = 'Excluding Clubs That Have Never Won a Title') +
  theme_bw() +
  scale_x_discrete(guide = guide_axis(angle = 45))
```

Plot 3:
```{r warnings = F}
ggplot(data = soccer, aes(x = winspermatch, y = goalmarginpermatch)) +
  geom_point() +
  geom_smooth(method = 'lm', se = F, color = 'midnightblue') +
  labs(x = "Win Percentage", y = 'Goal Margin per Match', 
       title = 'Club Win Percentage in Tournament vs. Goal Margin Per Match') +
  theme_bw()
```

#### Methods
Model 1: Linear Regression

Outcome:

- points per match

Predictors:

- wins per match

- goals per match

- goals against per match

- goal margin per match

- top five league

```{r}
model1 = lm(pointspermatch ~ winspermatch + goalspermatch + 
               goalsagainstpermatch + goalmarginpermatch + topfiveleague, 
               data = soccer)
summary(model1)
```

Conditions for Model 1:
Violated linearity, constant variance, and normality
```{r}
model1aug = augment(model1)

ggplot(model1aug, aes(x = .fitted, y = .resid)) +
  geom_point() +
  geom_hline(yintercept = 0, color = 'maroon') +
  labs(x = "Fitted (predicted) values", y = 'Residual') +
  ggtitle('Residual Plot Violates Linearity & Constant Variance Assumptions') +
  theme_bw()

ggplot(model1aug, aes(sample = .resid)) +
  stat_qq() +
  stat_qq_line() +
  theme_bw() +
  labs(x = 'Theoretical quantiles',
       y = 'Sample quantiles',
       title = 'QQ Plot Violates Normality Assumption')
```

testing correlations because something is weird

```{r}
test = soccer %>%
  dplyr::select(pointspermatch, winspermatch, goalspermatch, goalsagainstpermatch, goalmarginpermatch)

cor(test)
```
Model 2: Linear Regression

Outcome:

- points per match

Predictors:

- wins per match

- goals per match

- goals against per match

- top five league

```{r}
model2 = lm(pointspermatch ~ winspermatch + goalspermatch + 
               goalsagainstpermatch + topfiveleague, 
               data = soccer)
summary(model2)
```
Check Assumptions for Model 2
still all violated

```{r}
model2aug = augment(model2)

ggplot(model2aug, aes(x = .fitted, y = .resid)) +
  geom_point() +
  geom_hline(yintercept = 0, color = 'maroon') +
  labs(x = "Fitted (predicted) values", y = 'Residual') +
  ggtitle('Residual Plot Violates Linearity & Constant Variance Assumptions') +
  theme_bw()

ggplot(model2aug, aes(sample = .resid)) +
  stat_qq() +
  stat_qq_line() +
  theme_bw() +
  labs(x = 'Theoretical quantiles',
       y = 'Sample quantiles',
       title = 'QQ Plot Violates Normality Assumption')
```

Model 3: Linear Regression

Outcome:

- points per match

Predictors:

- wins per match

- goal margin per match

- top five league

```{r}
model3 = lm(pointspermatch ~ winspermatch + goalmarginpermatch + topfiveleague, 
            data = soccer)
summary(model3)
```
Check Assumptions Model 3

```{r}
model3aug = augment(model3)

ggplot(model3aug, aes(x = .fitted, y = .resid)) +
  geom_point() +
  geom_hline(yintercept = 0, color = 'maroon') +
  labs(x = "Fitted (predicted) values", y = 'Residual') +
  ggtitle('Residual Plot Violates Linearity & Constant Variance Assumptions') +
  theme_bw()

ggplot(model3aug, aes(sample = .resid)) +
  stat_qq() +
  stat_qq_line() +
  theme_bw() +
  labs(x = 'Theoretical quantiles',
       y = 'Sample quantiles',
       title = 'QQ Plot Violates Normality Assumption')
```

Model 4: Linear Mixed Effects Model (potential violation of independence with topfiveleague)

Outcome:

- points per match

Predictors:

- random intercept for topfiveleague

- goal margin per match

- wins per match

- goals per match

```{r}
model4 = lmer(pointspermatch ~ 1 + goalspermatch + winspermatch + goalsagainstpermatch +
              (1|topfiveleague), data = soccer)
summary(model4)
```

## Comparing Models: RMSE

RMSE Model 1: 0.1348656
RMSE Model 2: 0.1348656
RMSE Model 3: 0.1348667
RMSE Model 4: 0.1349185

```{r}
rmse(model1)
rmse(model2)
rmse(model3)
rmse(model4)
```


#### Results

#### Conclusion





















